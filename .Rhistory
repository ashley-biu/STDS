cereal_fat <- cereal_csv %>%
select(name, fat) %>%
arrange(desc(fat)) %>%
order(cereal$name)
cereal_fat <- cereal_csv %>%
select(name, fat) %>%
arrange(desc(fat)) %>%
order(cereal_fat$name)
library(tinytex)
library(tidyverse)
Link_of_the_dataset= "https://storage.googleapis.com/kagglesdsdata/datasets/2021/5514/cereal.csv?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com%2F20220809%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20220809T052330Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=8af042118065b9c813cb85004e940deda195ad313e7594dcd39fe06c3541fad97d467bed174020acc3f89afeef47475f6e5aa457724ced6127fecd9f4ee899f34ef7d345838a4e16339c354f6566ac35b9386fcb3d2958431ef8e81262daf583e9f724ac50f3c806b7c9e2cd062daf97707b735240f00d96efb69f39d34f370379736918c7b4bffff605a9f53daa2b78922e719f61dc00e8196beb24230371c9b091bdfad251c835b8795578e89a20b50668befa0a8bd89daec058e2f7d09622ef1d392ed92e2cc13c143324617dbfc83585f726a4f9a59eb214582ccd7552b6b73b0c91c559dcd005ac726d5f46f31cf7e349fbbc4cbfd52ad43e3ff2c73586"
Link_of_the_dataset
Link_destination= "./dataset.csv"
Link_destination
Link_of_the_dataset= "https://storage.googleapis.com/kagglesdsdata/datasets/2021/5514/cereal.csv?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com%2F20220809%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20220809T052330Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=8af042118065b9c813cb85004e940deda195ad313e7594dcd39fe06c3541fad97d467bed174020acc3f89afeef47475f6e5aa457724ced6127fecd9f4ee899f34ef7d345838a4e16339c354f6566ac35b9386fcb3d2958431ef8e81262daf583e9f724ac50f3c806b7c9e2cd062daf97707b735240f00d96efb69f39d34f370379736918c7b4bffff605a9f53daa2b78922e719f61dc00e8196beb24230371c9b091bdfad251c835b8795578e89a20b50668befa0a8bd89daec058e2f7d09622ef1d392ed92e2cc13c143324617dbfc83585f726a4f9a59eb214582ccd7552b6b73b0c91c559dcd005ac726d5f46f31cf7e349fbbc4cbfd52ad43e3ff2c73586"
Link_of_the_dataset
Link_destination= "./dataset.csv"
Link_destination
download.file(Link_of_the_dataset, Link_destination)
cereal_csv <- read.csv(Link_destination)
cereal_csv
cereal_fat <- cereal_csv %>%
select(name, fat) %>%
arrange(desc(fat)) %>%
order(cereal_fat$name)
cereal_fat <- cereal_csv %>%
select(name, fat) %>%
arrange(desc(fat)) %>%
order(cereal_csv$name)
cereal_fat <- cereal_csv %>%
select(name, fat) %>%
arrange(desc(fat))
cereal_fat
cereal_order <- cereal_csv
cereal_order
cereal_order
cereal_order <- cereal_csv
cereal_order[with(cereal_order, order("name")), ]
cereal_order
cereal_order <- cereal_csv
cereal_order[with(cereal_order, order("name")), ]
cereal_order
cereal_order <- cereal_csv
cereal_order[with(cereal_order, order("name")), ] %>%
select(name, fat)
cereal_order
cereal_order[with(cereal_order, order("name")), ] %>%
select(name, fat)
cereal_order <- cereal_csv
cereal_order[with(cereal_order, order("name")), ]
cereal_order
setwd("~/Documents/GitHub/STDS_AT2_2022/Code")
# Load in datasets ---------------------------
library(tidyverse)
library(lubridate)
library(readxl)
library(zoo)
configure_settings <- function() {
Sys.setlocale("LC_TIME", "C")
}
load_crash_data <- function(research_data){
# Load in fatalities data
fatal_crashes <-
read_csv("Data/ardd_fatal_crashes_jul2022.csv")
# Convert fatal crashes df to tibble
fatal_crashes <- as_tibble(fatal_crashes)
# rename column names for data hygiene
names(fatal_crashes) <-
c(
'crash_id',
'state',
'month',
'year',
'day_week',
'time',
'crash_type',
'fatality_num',
'bus_involvement',
'heavy_truck_involved',
'articulated_truck_involved',
'speed_limit',
'remoteness',
'sa4',
"lga",
"road_type",
"christmas_period",
"easter_period",
"day_of_week",
"time_of_day"
)
# filter fatal crashes by NSW
nsw_fatal_crashes <- fatal_crashes %>%
filter(state == "NSW")
crashes_with_quarter <- nsw_fatal_crashes %>% mutate(quarter = case_when(
between(month, 1, 3) ~ "Q1",
between(month, 4, 6) ~ "Q2",
between(month, 7, 9) ~ "Q3",
between(month, 10, 12) ~ "Q4",
TRUE ~ NA_character_
))
fatalities_by_quarter_and_year <- crashes_with_quarter %>%
count(quarter, year)
# rename count column to fatality number
names(fatalities_by_quarter_and_year)[which(names(fatalities_by_quarter_and_year) == "n")] <-
"fatality_number"
fatalities_by_quarter_and_year$time_frame <- paste(fatalities_by_quarter_and_year$year,fatalities_by_quarter_and_year$quarter, sep = "-")
fatalities_by_quarter_and_year <- select(fatalities_by_quarter_and_year[, c("time_frame", "fatality_number", "year", "quarter")],-3:-4)
# Create new DF and add yearly fatalities
research_data <- fatalities_by_quarter_and_year
return(research_data)
}
# Load in fatalities data
fatal_crashes <-
read_csv("Data/ardd_fatal_crashes_jul2022.csv")
setwd("~/Documents/GitHub/STDS_AT2_2022/Data")
# Load in fatalities data
fatal_crashes <-
read_csv("Data/ardd_fatal_crashes_jul2022.csv")
# Convert fatal crashes df to tibble
fatal_crashes <- as_tibble(fatal_crashes)
# import data-loader file
source("Code/data-loader.R")
setwd("~/Documents/GitHub/STDS_AT2_2022")
# import data-loader file
source("Code/data-loader.R")
# load libraries
library(devtools)
library(pacman)
# load in packages
pacman::p_load("modelr")
# laod dataset
research_data <- load_datasets()
crossv_kfold(research_data, k = 3)
# Load in datasets ---------------------------
library(tidyverse)
library(lubridate)
library(readxl)
library(zoo)
configure_settings <- function() {
Sys.setlocale("LC_TIME", "C")
}
load_crash_data <- function(research_data){
# Load in fatalities data
fatal_crashes <-
read_csv("Data/ardd_fatal_crashes_jul2022.csv")
# Convert fatal crashes df to tibble
fatal_crashes <- as_tibble(fatal_crashes)
# rename column names for data hygiene
names(fatal_crashes) <-
c(
'crash_id',
'state',
'month',
'year',
'day_week',
'time',
'crash_type',
'fatality_num',
'bus_involvement',
'heavy_truck_involved',
'articulated_truck_involved',
'speed_limit',
'remoteness',
'sa4',
"lga",
"road_type",
"christmas_period",
"easter_period",
"day_of_week",
"time_of_day"
)
# filter fatal crashes by NSW
nsw_fatal_crashes <- fatal_crashes %>%
filter(state == "NSW")
crashes_with_quarter <- nsw_fatal_crashes %>% mutate(quarter = case_when(
between(month, 1, 3) ~ "Q1",
between(month, 4, 6) ~ "Q2",
between(month, 7, 9) ~ "Q3",
between(month, 10, 12) ~ "Q4",
TRUE ~ NA_character_
))
fatalities_by_quarter_and_year <- crashes_with_quarter %>%
count(quarter, year)
# rename count column to fatality number
names(fatalities_by_quarter_and_year)[which(names(fatalities_by_quarter_and_year) == "n")] <-
"fatality_number"
fatalities_by_quarter_and_year$time_frame <- paste(fatalities_by_quarter_and_year$year,fatalities_by_quarter_and_year$quarter, sep = "-")
fatalities_by_quarter_and_year <- select(fatalities_by_quarter_and_year[, c("time_frame", "fatality_number", "year", "quarter")],-3:-4)
# Create new DF and add yearly fatalities
research_data <- fatalities_by_quarter_and_year
return(research_data)
}
# PETROL DATA ---------------------------
load_petrol_data <- function(research_data) {
# Read in dataset
petrol <-
read_excel("Data/AIP_Annual_Retail_Price_Data.xlsx",
sheet = "Average Petrol Retail")
# Convert petrol dataset to tibble
petrol <- as_tibble(petrol)
# Remove subheading rows
petrol <-  petrol[3:22, ]
# Rename Petrol year column
names(petrol)[which(names(petrol) == "AVERAGE PETROL RETAIL PRICE")] <-
"year"
# Select Petrol prices for NSW
nsw_petrol <- petrol %>%
select("year", "NSW")
# Rename NSW column to avg_petrol_price
names(nsw_petrol)[2] <- c("avg_petrol_price")
# Join petrol dataset to research DF with similar years
# (It will discard years that are not similar for exploratory purposes)
research_data <- merge(research_data, nsw_petrol)
return(research_data)
}
# CPI DATA  ---------------------------
load_CPI_data <- function(research_data) {
# Load in dataset
cpi_data <- read_excel(
"Data/CPI_Weighted average.xlsx",
sheet = "Data1",
range = cell_cols("A:B"),
col_types = c("date", "numeric")
)
# Remove rows 10 to 305
cpi_data <-  cpi_data[10:305, ]
# rename CPI column names for data hygiene
names(cpi_data) <- c('date', 'cpi_per_quarter')
cpi_data$date <- as.Date(cpi_data$date, format = "%Y-%m-%d")
# create new CPI column for month from date
cpi_data$month <- month(cpi_data$date)
# create new CPI column for year from date
cpi_data$year <- strftime(cpi_data$date, "%Y")
cpi_data <- cpi_data %>% mutate(time_frame = case_when(
between(month, 1, 3) ~ paste(year,"-Q1", sep = ""),
between(month, 4, 6) ~ paste(year,"-Q2", sep = ""),
between(month, 7, 9) ~ paste(year,"-Q3", sep = ""),
between(month, 10, 12) ~ paste(year,"-Q4", sep = ""),
))
# Convert date to date format.
cpi_quarterly <- cpi_data %>%
group_by(time_frame) %>%
dplyr::summarize(CPI = mean(cpi_per_quarter, na.rm = TRUE)) %>%
as.data.frame
research_data <- merge(research_data, cpi_quarterly)
return(research_data)
}
# NSW EMPLOYMENT RATE DATA -----------------------
load_employment_data <- Ëœfunction(research_data) {
# Load in datasets ---------------------------
library(tidyverse)
library(lubridate)
library(readxl)
library(zoo)
configure_settings <- function() {
Sys.setlocale("LC_TIME", "C")
}
load_crash_data <- function(research_data){
# Load in fatalities data
fatal_crashes <-
read_csv("Data/ardd_fatal_crashes_jul2022.csv")
# Convert fatal crashes df to tibble
fatal_crashes <- as_tibble(fatal_crashes)
# rename column names for data hygiene
names(fatal_crashes) <-
c(
'crash_id',
'state',
'month',
'year',
'day_week',
'time',
'crash_type',
'fatality_num',
'bus_involvement',
'heavy_truck_involved',
'articulated_truck_involved',
'speed_limit',
'remoteness',
'sa4',
"lga",
"road_type",
"christmas_period",
"easter_period",
"day_of_week",
"time_of_day"
)
# filter fatal crashes by NSW
nsw_fatal_crashes <- fatal_crashes %>%
filter(state == "NSW")
crashes_with_quarter <- nsw_fatal_crashes %>% mutate(quarter = case_when(
between(month, 1, 3) ~ "Q1",
between(month, 4, 6) ~ "Q2",
between(month, 7, 9) ~ "Q3",
between(month, 10, 12) ~ "Q4",
TRUE ~ NA_character_
))
fatalities_by_quarter_and_year <- crashes_with_quarter %>%
count(quarter, year)
# rename count column to fatality number
names(fatalities_by_quarter_and_year)[which(names(fatalities_by_quarter_and_year) == "n")] <-
"fatality_number"
fatalities_by_quarter_and_year$time_frame <- paste(fatalities_by_quarter_and_year$year,fatalities_by_quarter_and_year$quarter, sep = "-")
fatalities_by_quarter_and_year <- select(fatalities_by_quarter_and_year[, c("time_frame", "fatality_number", "year", "quarter")],-3:-4)
# Create new DF and add yearly fatalities
research_data <- fatalities_by_quarter_and_year
return(research_data)
}
# PETROL DATA ---------------------------
load_petrol_data <- function(research_data) {
# Read in dataset
petrol <-
read_excel("Data/AIP_Annual_Retail_Price_Data.xlsx",
sheet = "Average Petrol Retail")
# Convert petrol dataset to tibble
petrol <- as_tibble(petrol)
# Remove subheading rows
petrol <-  petrol[3:22, ]
# Rename Petrol year column
names(petrol)[which(names(petrol) == "AVERAGE PETROL RETAIL PRICE")] <-
"year"
# Select Petrol prices for NSW
nsw_petrol <- petrol %>%
select("year", "NSW")
# Rename NSW column to avg_petrol_price
names(nsw_petrol)[2] <- c("avg_petrol_price")
# Join petrol dataset to research DF with similar years
# (It will discard years that are not similar for exploratory purposes)
research_data <- merge(research_data, nsw_petrol)
return(research_data)
}
# CPI DATA  ---------------------------
load_CPI_data <- function(research_data) {
# Load in dataset
cpi_data <- read_excel(
"Data/CPI_Weighted average.xlsx",
sheet = "Data1",
range = cell_cols("A:B"),
col_types = c("date", "numeric")
)
# Remove rows 10 to 305
cpi_data <-  cpi_data[10:305, ]
# rename CPI column names for data hygiene
names(cpi_data) <- c('date', 'cpi_per_quarter')
cpi_data$date <- as.Date(cpi_data$date, format = "%Y-%m-%d")
# create new CPI column for month from date
cpi_data$month <- month(cpi_data$date)
# create new CPI column for year from date
cpi_data$year <- strftime(cpi_data$date, "%Y")
cpi_data <- cpi_data %>% mutate(time_frame = case_when(
between(month, 1, 3) ~ paste(year,"-Q1", sep = ""),
between(month, 4, 6) ~ paste(year,"-Q2", sep = ""),
between(month, 7, 9) ~ paste(year,"-Q3", sep = ""),
between(month, 10, 12) ~ paste(year,"-Q4", sep = ""),
))
# Convert date to date format.
cpi_quarterly <- cpi_data %>%
group_by(time_frame) %>%
dplyr::summarize(CPI = mean(cpi_per_quarter, na.rm = TRUE)) %>%
as.data.frame
research_data <- merge(research_data, cpi_quarterly)
return(research_data)
}
# NSW EMPLOYMENT RATE DATA -----------------------
load_employment_data <- Ëœfunction(research_data) {
